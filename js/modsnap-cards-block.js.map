{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/ms-cards-block.js"],"names":["registerBlockType","wp","blocks","RichText","blockEditor","title","icon","category","description","keywords","attributes","myRichHeading","type","myRichText","source","selector","edit","props","setAttributes","newtext","save"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;IAEQA,iB,GAAsBC,EAAE,CAACC,M,CAAzBF,iB;IACAG,Q,GAAaF,EAAE,CAACG,W,CAAhBD,Q;AAERH,iBAAiB,CAAC,oBAAD,EAAuB;AACtCK,OAAK,EAAE,eAD+B;AAEtCC,MAAI,EAAE,WAFgC;AAGtCC,UAAQ,EAAE,QAH4B;AAItCC,aAAW,EAAE,8BAJyB;AAKtCC,UAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CAL4B;AAMtCC,YAAU,EAAE;AACVC,iBAAa,EAAE;AACbC,UAAI,EAAE;AADO,KADL;AAIVC,cAAU,EAAE;AACVD,UAAI,EAAE,QADI;AAEVE,YAAM,EAAE,MAFE;AAGVC,cAAQ,EAAE;AAHA;AAJF,GAN0B;AAgBtCC,MAAI,EAAE,cAACC,KAAD,EAAW;AAAA,QACPP,UADO,GACuBO,KADvB,CACPP,UADO;AAAA,QACKQ,aADL,GACuBD,KADvB,CACKC,aADL;AAEf,wBACE,8CACE,oBAAC,QAAD;AACE,aAAO,EAAC,IADV;AAEE,iBAAW,EAAC,yBAFd;AAGE,WAAK,EAAER,UAAU,CAACC,aAHpB;AAIE,cAAQ,EAAE,kBAACQ,OAAD;AAAA,eAAaD,aAAa,CAAC;AAAEP,uBAAa,EAAEQ;AAAjB,SAAD,CAA1B;AAAA;AAJZ,MADF,eAOE,oBAAC,QAAD;AACE,aAAO,EAAC,GADV;AAEE,iBAAW,EAAC,2BAFd;AAGE,WAAK,EAAET,UAAU,CAACG,UAHpB;AAIE,cAAQ,EAAE,kBAACM,OAAD;AAAA,eAAaD,aAAa,CAAC;AAAEL,oBAAU,EAAEM;AAAd,SAAD,CAA1B;AAAA;AAJZ,MAPF,CADF;AAgBD,GAlCqC;AAmCtCC,MAAI,EAAE,cAACH,KAAD,EAAW;AAAA,QACPP,UADO,GACQO,KADR,CACPP,UADO;AAEf,wBACE,8CACE,oBAAC,QAAD,CAAU,OAAV;AAAkB,aAAO,EAAC,IAA1B;AAA+B,WAAK,EAAEA,UAAU,CAACC;AAAjD,MADF,eAEE,oBAAC,QAAD,CAAU,OAAV;AAAkB,aAAO,EAAC,GAA1B;AAA8B,WAAK,EAAED,UAAU,CAACG;AAAhD,MAFF,CADF;AAMD;AA3CqC,CAAvB,CAAjB,C","file":"modsnap-cards-block.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/ms-cards-block.js\");\n","/* eslint-disable react/display-name */\n// https://awhitepixel.com/blog/wordpress-gutenberg-create-custom-block-tutorial/\n\nconst { registerBlockType } = wp.blocks;\nconst { RichText } = wp.blockEditor;\n\nregisterBlockType('modsnap/cards-grid', {\n  title: 'Modsnap Cards',\n  icon: 'grid-view',\n  category: 'common',\n  description: 'Add a card grid by category.',\n  keywords: ['grid', 'card'],\n  attributes: {\n    myRichHeading: {\n      type: 'string',\n    },\n    myRichText: {\n      type: 'string',\n      source: 'html',\n      selector: 'p',\n    },\n  },\n  edit: (props) => {\n    const { attributes, setAttributes } = props;\n    return (\n      <div>\n        <RichText\n          tagName=\"h2\"\n          placeholder=\"Write your heading here\"\n          value={attributes.myRichHeading}\n          onChange={(newtext) => setAttributes({ myRichHeading: newtext })}\n        />\n        <RichText\n          tagName=\"p\"\n          placeholder=\"Write your paragraph here\"\n          value={attributes.myRichText}\n          onChange={(newtext) => setAttributes({ myRichText: newtext })}\n        />\n      </div>\n    );\n  },\n  save: (props) => {\n    const { attributes } = props;\n    return (\n      <div>\n        <RichText.Content tagName=\"h2\" value={attributes.myRichHeading} />\n        <RichText.Content tagName=\"p\" value={attributes.myRichText} />\n      </div>\n    );\n  },\n});\n"],"sourceRoot":""}